X = 'abcdefgh';
M = size(X,2);
% T = markov_PTM_generate(M);
% save('TRANSITION_PROB.mat', 'T');

load( 'TRANSITION_PROB.mat', 'T');
p_0 = ones(1, M)*1/M;

seq_length = 1000000;
% seq = markov_sequence_generate(X, T, p_0, seq_length);
% dlmwrite('data.txt' , seq, 'delimiter', '');

fID = fopen('data.txt','r');
seq = fscanf(fID,'%c');
fclose(fID);

DICTIONARY_SIZE = 10000;
% lempel_code = lempel_ziv_encode(seq, DICTIONARY_SIZE, X);

HUFFMAN_TABLE = strings(M);
INDICES = 1:M;
for i=1:M
    HUFFMAN_TABLE(i,:) = huffman(T(i,:),INDICES,M);
end

code = string(dec2bin((0:M-1) * (seq(1,1)==X')));
for ptr=2:seq_length
    new_s = char(HUFFMAN_TABLE(seq(1,ptr-1)==X', seq(1,ptr)==X'));
    code = code+new_s;
end


